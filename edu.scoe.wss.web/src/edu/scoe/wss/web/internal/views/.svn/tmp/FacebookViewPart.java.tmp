package edu.scoe.wss.web.internal.views;

import java.io.IOException;

import org.eclipse.core.runtime.IPath;
import org.eclipse.swt.SWT;
import org.eclipse.swt.browser.Browser;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Text;
import org.eclipse.ui.part.ViewPart;

import edu.scoe.wss.web.Activator;
import edu.scoe.wss.web.internal.facebook.impl.FaceBookOperations;
import edu.scoe.wss.web.internal.facebook.impl.FacebookFileWriter;

public class FacebookViewPart extends ViewPart {
	private Browser browser;
	private static final String facebookHTMLFile = "facebook.html"; //$NON-NLS-1$

	final private static FaceBookOperations fbOperations = new FaceBookOperations();
	
	public FacebookViewPart() {
		// TODO Auto-generated constructor stub
	}

	@Override
	public void createPartControl(Composite parent) {
		// TODO Auto-generated method stub

		GridLayout layout = new GridLayout();
		layout.numColumns = 1;
		layout.marginWidth = 0;
		layout.marginHeight = 0;
		parent.setLayout(layout);
		// Button login = new Button(parent, SWT.PUSH);
		// login.setText("Login");

		final Composite compositeForStatusUpdate = new Composite(parent,
				SWT.NONE);
		GridLayout layoutUpdateStatus = new GridLayout();
		layoutUpdateStatus.numColumns = 2;
		compositeForStatusUpdate.setLayout(layoutUpdateStatus);
		final Text location = new Text(compositeForStatusUpdate, SWT.BORDER);

		GridData layoutData1 = new GridData(300, 20);
		layoutData1.grabExcessHorizontalSpace = true;
		layoutData1.grabExcessVerticalSpace = false;
		location.setLayoutData(layoutData1);

		Button update = new Button(compositeForStatusUpdate, SWT.PUSH);
		update.setText("Update Status"); //$NON-NLS-1$

		parent.setSize(300, 300);

		final Composite parentBrowser = new Composite(parent, SWT.BORDER);
		GridData layoutData = new GridData();
		layoutData.grabExcessHorizontalSpace = true;
		layoutData.grabExcessVerticalSpace = true;
		layoutData.horizontalAlignment = GridData.FILL;
		layoutData.verticalAlignment = GridData.FILL;
		parentBrowser.setLayoutData(layoutData);

		layout = new GridLayout();
		layout.numColumns = 1;
		layout.marginWidth = 0;
		layout.marginHeight = 0;
		parentBrowser.setLayout(layout);

		browser = new Browser(parentBrowser, SWT.None);

		layoutData = new GridData();
		layoutData.grabExcessHorizontalSpace = true;
		layoutData.grabExcessVerticalSpace = true;
		layoutData.horizontalAlignment = GridData.FILL;
		layoutData.verticalAlignment = GridData.FILL;
		browser.setLayoutData(layoutData);

	}

	@Override
	public void setFocus() {
		// TODO Auto-generated method stub

	}

<<<<<<< .mine
					String API_KEY = "164302190291616";
					String Secret = "c5e50a4242da72f8fb74bf8631c1d84d";
					String access = "2227470867|2.OdNJUbWGZGSDFH0ApP0V3w__.3600.1301943600-568780277|-Sl8uHUnIYJAXUsPpn1rGabCeCc";
					// DefaultFacebookClient is the FacebookClient implementation
					// that ships with RestFB. You can customize it by passing in
					// custom JsonMapper and WebRequestor implementations, or simply
					// write your own FacebookClient instead for maximum control.
=======
	private void handleLoginClick() {
		Display.getDefault().asyncExec(new Runnable() {
			@Override
			public void run() {
>>>>>>> .r48

				
				// DefaultFacebookClient is the FacebookClient implementation
				// that ships with RestFB. You can customize it by passing in
				// custom JsonMapper and WebRequestor implementations, or simply
				// write your own FacebookClient instead for maximum control.

<<<<<<< .mine
					String URL = "https://www.facebook.com/dialog/oauth?client_id=" + API_KEY + "&redirect_uri=http://facebook.com/";
					System.out.println(URL);
					String sess = br.readLine();
					String URL1 = "https://graph.facebook.com/oauth/access_token?client_id=" + API_KEY + "&redirect_uri=http://facebook.com/&client_secret="+Secret+"&code="+sess;
					System.out.println(URL1);*/
						
					
			User user = facebookClient.fetchObject("me", User.class);
			
					
			System.out.println("User name: " + user.getName());
					
			Connection<User> myFriends = facebookClient.fetchConnection("me/friends", User.class);
			Connection<Post> myFeed = facebookClient.fetchConnection("me/feed", Post.class);
			
			System.out.println("Count of my friends: " + myFriends.getData().size());
			
			for(int i=0;i<myFeed.getData().size();i++)
			{
			text = myFeed.getData().get(i).getMessage();
			System.out.println("feed" + i + ":" + myFeed.getData().get(i).getName());
			try {
				writeToFile();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
=======
				
				/*
				 * BufferedReader br = new BufferedReader(new
				 * InputStreamReader(System.in));
				 * 
				 * String URL =
				 * "https://www.facebook.com/dialog/oauth?client_id=" + API_KEY
				 * + "&redirect_uri=http://facebook.com/";
				 * System.out.println(URL); String sess = br.readLine(); String
				 * URL1 =
				 * "https://graph.facebook.com/oauth/access_token?client_id=" +
				 * API_KEY +
				 * "&redirect_uri=http://facebook.com/&client_secret="+
				 * Secret+"&code="+sess; System.out.println(URL1);
				 */

				

				System.out.println("User name: " + fbOperations.getMe());
				

				System.out.println("Count of my friends: "
						+ fbOperations.getUsers().getData().size());
				try {
					writeToFile();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
>>>>>>> .r48
			}
		});
	}

	public void facebooklogin() {
		handleLoginClick();
	}

	private void writeToFile() throws IOException {
		IPath path = Activator.getDefault().getStateLocation()
		.append(facebookHTMLFile);
		FacebookFileWriter writer = new FacebookFileWriter(path.toOSString());
		writer.writeFeedsToHTML(fbOperations);
		browser.setUrl(writer.getFilePath());
	}

	public void refresh() throws IOException {
		writeToFile();
	}

}
